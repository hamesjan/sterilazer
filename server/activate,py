import os
import pymongo
import json
import time
import requests

def hardwarereq():
      url = "http://ba0cd1dcaec1.ngrok.io/activate"

      payload = ""
      headers = {
          'cache-control': "no-cache"
          }

      response = requests.request("GET", url, data=payload, headers=headers)

      

def dummy(request):
    """Responds to any HTTP request.
    Args:
        request (flask.Request): HTTP request object.
    Returns:
        The response text or any set of values that can be turned into a
        Response object using
        `make_response <http://flask.pocoo.org/docs/1.0/api/#flask.Flask.make_response>`.
    """
    if request.method == 'OPTIONS':
        # Allows GET requests from origin https://mydomain.com with
        # Authorization header
        headers = {
            'Access-Control-Allow-Origin': '*',
            'Access-Control-Allow-Methods': 'POST',
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Max-Age': '3600',
            'Access-Control-Allow-Credentials': 'true'
        }
        return ('', 204, headers)

    # Set CORS headers for main requests
    headers = {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Credentials': 'true'
    }

    # request_json = request.get_json()
    mongostr = os.environ.get('MONGOSTR')
    client = pymongo.MongoClient(mongostr)
    db = client["sterilazer"]
    col = db.current
    col.update_one({"deviceid":"001"}, {"$set":{"status":"on"}})
    ts = str(int(time.time()))
    col.update_one({"deviceid":"001"}, {"$set":{"lastupdated":ts}})


#ngrok call here
    hardwarereq()

    retstr = "action complete"

    if request.args and 'message' in request.args:
        return request.args.get('message')
    # elif request_json and 'message' in request_json:
    #     return request_json['message']
    else:
        return retstr
